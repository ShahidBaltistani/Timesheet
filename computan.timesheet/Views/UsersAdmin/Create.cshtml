@model computan.timesheet.Models.RegisterViewModel
@{ ViewBag.Title = "Add User"; }
<div class="panel panel-default" id="maincontent">
@Html.Partial("_NavTabs", "usersadmin")
<div class="panel">
<div class="panel-heading bg-teal-700">
    <div class="row">
        <div class="col-xs-12">
            <div class="col-xs-12 col-sm-7">
                <h4 class="panel-title ticket-title">
                    <span>Add New User</span>
                </h4>
            </div>
            <div class="col-xs-12 col-sm-5">
                <div class="heading-elements">
                    <ul class="icons-list">
                        <li>
                            <button class="label border-left-primary label-striped" onclick="window.location.href = '/usersadmin/index'">List Users</button>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="panel-body">
@using (Html.BeginForm("Create", "UsersAdmin", FormMethod.Post, new {enctype = "multipart/form-data", @class = "form-horizontal", role = "form"}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new {@class = "text-danger"})
    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-md-3">
                @Html.LabelFor(m => m.FirstName, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(m => m.LastName, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(m => m.teamId, new { @class = "control-label" })
                @Html.DropDownListFor(model => model.teamId, ViewBag.teams as SelectList, "Select Team For User", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.teamId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3">
                @Html.LabelFor(m => m.Password, new { @class = "control-label" })
                @Html.PasswordFor(m => m.Password, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label" })
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(m => Model.Levelid, new { @class = "control-label" })
                @Html.DropDownListFor(model => model.Levelid, ViewBag.levels as SelectList, "Select Level", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Levelid, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(m => m.Skypeid, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Skypeid, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Skypeid, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3">
                @Html.LabelFor(m => m.Address, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(m => m.City, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(m => m.StateId, new { @class = "control-label" })
                @Html.DropDownListFor(model => model.StateId, ViewBag.statelist as SelectList, "Select State", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(m => m.CountryId, new { @class = "control-label" })
                @Html.DropDownListFor(model => model.CountryId, ViewBag.countrylist as SelectList, "Select Country", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3">
                @Html.LabelFor(m => m.Zip, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Zip, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(m => m.Phone, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Phone, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(m => m.Mobile, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Mobile, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(m => m.Designation, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Designation, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3">
                @Html.LabelFor(model => model.DateOfBirth, new { @class = "control-label" })
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.NationalIdentificationNumber, new { @class = "control-label" })
                @Html.EditorFor(model => model.NationalIdentificationNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NationalIdentificationNumber, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.PersonalEmailAddress, new { @class = "control-label" })
                @Html.EditorFor(model => model.PersonalEmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PersonalEmailAddress, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.EmergencyPhoneNumber, new { @class = "control-label" })
                @Html.EditorFor(model => model.EmergencyPhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmergencyPhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3">
                @Html.LabelFor(model => model.PersonNameEmergency, new { @class = "control-label" })
                @Html.EditorFor(model => model.PersonNameEmergency, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PersonNameEmergency, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.Experience, new { @class = "control-label" })
                @Html.EditorFor(model => model.Experience, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Experience, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.ShiftTimePK, new { @class = "control-label" })
                @Html.DropDownListFor(model => model.ShiftTimePK, null, "Please Select", new { @class = "form-control" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.ShiftTimeEST, new { @class = "control-label" })
                @Html.DropDownListFor(model => model.ShiftTimeEST, null, "Please Select", new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3">
                @Html.LabelFor(model => model.DateOfJoining, new { @class = "control-label" })
                @Html.EditorFor(model => model.DateOfJoining, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfJoining, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.TeamLead, new { @class = "control-label" })
                @Html.DropDownListFor(model => model.TeamLead, null, "Please Select", new { @class = "form-control" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.ProjectManager, new { @class = "control-label" })
                @Html.DropDownListFor(model => model.ProjectManager, null, "Please Select", new { @class = "form-control" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(m => m.ProfileImage, new { @class = "control-label" })<br>
                @Html.TextBoxFor(m => m.ProfileImage, new { type = "file", style = "display:none" })
                <div class="input-group">
                    <label for="ProfileImage" class="btn input-group-addon" style="background-color: white;">
                        <i class="icon-image2 position-left"> Upload</i>
                    </label>
                    <label class="fileName form-control lbl">No File Choose</label>
                </div>
                @Html.ValidationMessageFor(model => model.ProfileImage, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3">
                @Html.LabelFor(m => m.LatestResume, new { @class = "control-label" })<br>
                @Html.TextBoxFor(m => m.LatestResume, new { type = "file", style = "display:none" })
                <div class="input-group">
                    <label for="LatestResume" class="btn input-group-addon" style="background-color: white;">
                        <i class="icon-image2 position-left"> Upload</i>
                    </label>
                    <label class="LatestResume form-control lbl">No File Choose</label>
                </div>
                @Html.ValidationMessageFor(model => model.LatestResume, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(m => m.LastDegree, new { @class = "control-label" })<br>
                @Html.TextBoxFor(m => m.LastDegree, new { type = "file", style = "display:none" })
                <div class="input-group">
                    <label for="LastDegree" class="btn input-group-addon" style="background-color: white;">
                        <i class="icon-image2 position-left"> Upload</i>
                    </label>
                    <label class="LastDegree form-control lbl">No File Choose</label>
                </div>
                @Html.ValidationMessageFor(model => model.LastDegree, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(m => m.CNIC_Front, new { @class = "control-label" })<br>
                @Html.TextBoxFor(m => m.CNIC_Front, new { type = "file",name="hhh", style = "display:none" })
                <div class="input-group">
                    <label for="CNIC_Front" class="btn input-group-addon" style="background-color: white;">
                        <i class="icon-image2 position-left"> Upload</i>
                    </label>
                    <label class="CNIC_Front form-control lbl">No File Choose</label>
                </div>
                @Html.ValidationMessageFor(model => model.CNIC_Front, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(m => m.CNIC_Back, new { @class = "control-label" })<br>
                @Html.TextBoxFor(m => m.CNIC_Back, new { type = "file", style = "display:none" })
                <div class="input-group">
                    <label for="CNIC_Back" class="btn input-group-addon" style="background-color: white;">
                        <i class="icon-image2 position-left"> Upload</i>
                    </label>
                    <label class="CNIC_Back form-control lbl">No File Choose</label>
                </div>
                @Html.ValidationMessageFor(model => model.CNIC_Back, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3">
                @Html.LabelFor(m => m.ExperienceLetter, new { @class = "control-label" })<br>
                @Html.TextBoxFor(m => m.ExperienceLetter, new { type = "file", style = "display:none" })
                <div class="input-group">
                    <label for="ExperienceLetter" class="btn input-group-addon" style="background-color: white;">
                        <i class="icon-image2 position-left"> Upload</i>
                    </label>
                    <label class="ExperienceLetter form-control lbl">No File Choose</label>
                </div>
                @Html.ValidationMessageFor(model => model.ExperienceLetter, "", new { @class = "text-danger" })
            </div>
            </div>
            <div class="form-group">
                <div class="col-md-12">
                    <div class="input-group">
                        <label class="input-group-addon">User Skills</label>
                        <select id="Skills" class="multiselect-select-all-filtering" multiple="multiple" name="skills">
                            @foreach (var item in ViewBag.Skills)
                            {
                                if (item.name != null)
                                {
                                    <option value="@item.id"> @item.name </option>
                                }
                            }
                        </select>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-4">
                    <label class="col-md-3 control-label">User Role</label>
                    <div class="col-md-9">
                        @foreach (var item in (SelectList)ViewBag.RoleId)
                        {
                            if (item.Value == "User")
                            {
                                <label class="radio-inline">
                                    <input type="radio" id="@item.Value" name="SelectedRoles" value="@item.Value" class="custom-checkbox" checked="checked"> @item.Value
                                </label>
                            }
                            else
                            {
                                <label class="radio-inline">
                                    <input type="radio" id="@item.Value" name="SelectedRoles" value="@item.Value" class="custom-checkbox"> @item.Value
                                </label>
                            }
                        }
                    </div>
                </div>

                <div class="col-md-4">
                    <label class="col-md-3 control-label">Job Type</label>
                    <div class="col-md-9">
                        <label class="radio-inline">
                            @Html.RadioButtonFor(model => model.IsRemoteJob, "False", new { Checked = "checked", @class = "custom-checkbox" })On-Site
                        </label>
                        <label class="radio-inline">
                            @Html.RadioButtonFor(model => model.IsRemoteJob, "True", new { @class = "custom-checkbox" }) Remote
                        </label>
                    </div>
                </div>
                <div class="col-md-4">
                    <label class="col-md-4 control-label">Holiday Calendar</label>
                    <div class="col-md-8">
                        <label class="radio-inline">
                            @Html.RadioButtonFor(model => model.IsPkHoliday, "True", new { Checked = "checked", @class = "custom-checkbox" }) PAK
                        </label>
                        <label class="radio-inline">
                            @Html.RadioButtonFor(model => model.IsPkHoliday, "False", new { @class = "custom-checkbox" }) USA
                        </label>
                    </div>
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-12 text-center">
                    <input type="submit" class="btn btn-primary" value="Create" />
                </div>
            </div>
        </div>
        }
    </div>
</div>
</div>
<style>
    .text-checkbox,
    .text-checkbox:hover,
    .text-checkbox:focus { color: #FF7043 !important; }

    .border-checkbox { border-color: #FF7043; }
    .lbl {
        white-space: nowrap;
        overflow: hidden;
        max-width: 230px;
        text-overflow: ellipsis;
    }
</style>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/select2")
    <script src="~/Scripts/default/js/plugins/forms/styling/uniform.min.js"></script>
    <script src="~/Scripts/default/js/plugins/forms/selects/bootstrap_multiselect.js"></script>
    <script src="~/Scripts/custom/CascadingDropdown.min.js"></script>
}

<script type="text/javascript">
    $(document).ready(function() {
        $("#StateId").select2();
        $("#CountryId").select2();
        $("#Levelid").select2();
        $("#teamId").select2();
        $('#Skills').select2();
        $("#Reported").select2();

        $("#TeamLead").select2();
        $("#ProjectManager").select2();
        $("#ShiftTimeEST").select2();
        $("#ShiftTimePK").select2();

        $("#DateOfJoining").datepicker({ dateFormat: 'mm/dd/yy' });
        //$("#DateOfBirth").datepicker({ dateFormat: 'mm/dd/yy' });
        $('#DateOfBirth').datepicker({ dateFormat: 'yy-mm-dd', maxDate: (-1) });


        //$("#DateOfJoining").AnyTime_picker({ format: "%m/%d/%Z" });
        //$("#DateOfBirth").AnyTime_picker({ format: "%m/%d/%Z" });
        //$("#SpouseDateOfBirth").AnyTime_picker({ format: "%m/%d/%Z" });
        $(".custom-checkbox").uniform({
            radioClass: 'choice',
            wrapperClass: 'text-checkbox border-checkbox'
        });
        $("#ProfileImage").on("change",
            function() {
                var fileName = $(this).val().split("\\").pop();
                $(".fileName").html(fileName);
            });
        $("#LatestResume").on("change",
            function() {
                var fileName = $(this).val().split("\\").pop();
                $(".LatestResume").html(fileName);
            });

        $("#LastDegree").on("change",
            function() {
                var fileName = $(this).val().split("\\").pop();
                $(".LastDegree").html(fileName);
            });

        $("#CNIC_Front").on("change",
            function() {
                var fileName = $(this).val().split("\\").pop();
                $(".CNIC_Front").html(fileName);
            });

        $("#CNIC_Back").on("change",
            function() {
                var fileName = $(this).val().split("\\").pop();
                $(".CNIC_Back").html(fileName);
            });

        $("#ExperienceLetter").on("change",
            function() {
                var fileName = $(this).val().split("\\").pop();
                $(".ExperienceLetter").html(fileName);
            });
    });


</script>