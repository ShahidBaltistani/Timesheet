@model computan.timesheet.Models.ChangePasswordViewModel
@{ ViewBag.Title = "Change Password"; }

@section header {
    <div style="background-color: #fff;" class="panel page-header border-top-primary">
        <div class="page-header-content">
            <div class="page-title">
                <h5>
                    <i class="icon-arrow-left52 position-left"></i> <span class="text-semibold">Timesheet</span> - Change Password
                    <small class="display-block">Change your password</small>
                </h5>
            </div>
            <div class="heading-elements">
                <div class="btn-group">
                </div>
            </div>
            <a class="heading-elements-toggle">
                <i class="icon-menu"></i>
            </a>
        </div>
        <div style="border-bottom: 0; box-shadow: none; margin-bottom: 0;" class="breadcrumb-line">
            <ul class="breadcrumb">
                <li>
                    <a href="/Home/index"><i class="icon-home2 position-left"></i>Home</a>
                </li>
                <li>
                    <a href="/account/ChangePassword">Change Password</a>
                </li>
            </ul>
        </div>
    </div>
}

<div class="panel panel-flat">
    <div class="panel-heading">
        <h5 class="panel-title">Change your Password</h5>
        <div class="heading-elements">
            <ul class="icons-list">
                <li>
                    <a data-action="collapse"></a>
                </li>
                <li>
                    <a data-action="reload"></a>
                </li>
            </ul>
        </div>
        <a class="heading-elements-toggle">
            <i class="icon-menu"></i>
        </a>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm("ChangePassword", "Account", FormMethod.Post, new {@class = "form-horizontal", role = "form"}))
        {
            @Html.AntiForgeryToken()
            <hr/>
            if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger alert-styled-left alert-bordered">
                    <button data-dismiss="alert" class="close" type="button">
                        <span>×</span><span class="sr-only">Close</span>
                    </button>
                    <span class="text-semibold">@Html.ValidationSummary(true, "", new {@class = ""})</span>
                </div>
            }
            if (ViewBag.success == true)
            {
                <div class="">
                    <div class="alert alert-success alert-styled-left alert-arrow-left alert-bordered" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        <span>Your password has been changed successfully.</span>
                    </div>
                </div>
            }
            <div class="form-group">
                <div class="col-md-12">
                    @Html.LabelFor(m => m.OldPassword, new {@class = "control-label"})
                    @Html.PasswordFor(m => m.OldPassword, new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.OldPassword, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12">
                    @Html.LabelFor(m => m.NewPassword, new {@class = "control-label"})
                    @Html.PasswordFor(m => m.NewPassword, new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.NewPassword, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12">
                    @Html.LabelFor(m => m.ConfirmPassword, new {@class = "control-label"})
                    @Html.PasswordFor(m => m.ConfirmPassword, new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12 text-center">
                    <input type="submit" class="btn btn-primary" value="Save"/>
                </div>
            </div>
        }
    </div>
</div>