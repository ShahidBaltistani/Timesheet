@model computan.timesheet.Models.LoginViewModel
@{
    ViewBag.Title = "Log in";
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";
}
<!-- Page container -->
<div class="login-container">
    <span class="dot"></span> <span class="dot2"></span> <span class="dot3"></span> <span class="dot4"></span>
    <!-- Content area -->
    @using (Html.BeginForm("Login", "Account", new {ViewBag.ReturnUrl}, FormMethod.Post, new {@class = "form-horizontal", role = "form"}))
    {
        @Html.AntiForgeryToken()
        <input type="hidden" class="token" id="token" name="token"/>
        <div class="panel panel-body login-form login-backend">
            <div class="back2">
                <div class="center">
                    <div class="text-center">
                        <img src="~/computanLogo.png" class="logo1"/>
                        <h5 class="content-group-lg"> Welcome Back! <small class="display-block">Login to continue</small> </h5>
                    </div>
                    @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                    <div class="form-group has-feedback has-feedback-left">
                        @Html.TextBoxFor(m => m.Email, new {@class = "form-control", placeholder = "Username"})
                        @Html.ValidationMessageFor(m => m.Email, "", new {@class = "text-danger"})
                        <div class="form-control-feedback">
                            <i class="icon-user text-muted"></i>
                        </div>
                    </div>
                    <div class="form-group has-feedback has-feedback-left">
                        @Html.PasswordFor(m => m.Password, new {@class = "form-control", placeholder = "Password"})
                        @Html.ValidationMessageFor(m => m.Password, "", new {@class = "text-danger"})
                        <div class="form-control-feedback">
                            <i class="icon-lock2 text-muted"></i>
                        </div>
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn orange-bg btn-block token-button">Login <i class="icon-circle-right2 position-right"></i></button>
                    </div>
                </div>
            </div>
        </div>
    }
    <div class="footer text-muted"> &copy; @DateTime.Now.Year <a href="/">Timesheet</a> By <a href="https://www.computan.com/" target="_blank">Computan</a> </div>
    <!-- /content area -->
</div>
<!-- /page container -->
<link href="~/Content/Custom/login-custom.min.css" rel="stylesheet"/>
<script src="https://www.gstatic.com/firebasejs/5.10.1/firebase.js"></script>
<script type="text/javascript">
    $(document).ajaxError(function(xhr, props) {
        var returnUrl = window.location.pathname;
        if (props.status === 403) {
            swal({ title: "Login Required!", text: "Please login to continue", timer: 2000, showConfirmButton: false });
            setInterval(function() {
                    $.ajax({
                        url: "/ajaxlogin/RedirectToLogin/",
                        type: "Get",
                        data: { returnUrl: returnUrl },
                        success: function(data) { window.location.href = data.redirectTo; }
                    });
                },
                2000);
        }
    });
    var config = {
        apiKey: "AIzaSyD3CgcDFetd-MyAzPSVjD-Ui8UEPLCJ0l4",
        authDomain: "timesheet-44f54.firebaseapp.com",
        databaseURL: "https://timesheet-44f54-default-rtdb.firebaseio.com",
        projectId: "timesheet-44f54",
        storageBucket: "timesheet-44f54.appspot.com",
        messagingSenderId: "46428946455"
    };
    firebase.initializeApp(config);
    const messaging = firebase.messaging();
    messaging
        .requestPermission()
        .then(function() {
            return messaging.getToken();
        })
        .then(function(token) {
            document.getElementById("token").value = String(token);
        })
        .catch(function(err) {
            console.log("Unable to get permission to notify.", err);
        });
    messaging.onMessage(function(payload) {
        //console.log("Message received. ", payload);
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}