@model computan.timesheet.core.TeamMember
@{ ViewBag.Title = "Edit Team Member"; }

@section header {
    <div style="background-color: #fff;" class="panel page-header border-top-primary">
        <div class="page-header-content">
            <div class="page-title">
                <h5>
                    <i class="icon-arrow-left52 position-left"></i> <span class="text-semibold">Timesheet</span> - Manage Team Members
                    <small class="display-block">Manage Team Members</small>
                </h5>
            </div>
            <div class="heading-elements">
                <div class="btn-group">
                    @*<a href="/teammember/index" class="btn btn-primary"><i class="icon-list3 position-left"></i> List Team Members</a>*@
                </div>
            </div>
            <a class="heading-elements-toggle">
                <i class="icon-menu"></i>
            </a>
        </div>
        <div style="border-bottom: 0; box-shadow: none; margin-bottom: 0;" class="breadcrumb-line">
            <ul class="breadcrumb">
                <li>
                    <a href="/Home/index"><i class="icon-home2 position-left"></i>Home</a>
                </li>
                <li>
                    <a href="/teammembers/index/@Model.teamid">Team Members</a>
                </li>
                <li>
                    <a href="/teammembers/edit/@Model.id">Edit Team Member</a>
                </li>
            </ul>
        </div>
    </div>
}

<div class="panel panel-flat">
    <div class="panel-heading">
        <div class="heading-elements">
            <ul class="icons-list">
                <li>
                    <a data-action="collapse"></a>
                </li>
                <li>
                    <a data-action="reload"></a>
                </li>
            </ul>
        </div>
        <a class="heading-elements-toggle">
            <i class="icon-menu"></i>
        </a>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                <h4>Edit Team Member</h4>
                <hr/>
                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                @Html.HiddenFor(model => model.id)
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.teamid, "Team", new {@class = "control-label"})
                        @Html.DropDownList("teamid", null, new {@class = "form-control"})
                        @Html.ValidationMessageFor(model => model.teamid, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.usersid, "User Name", new {@class = "control-label"})
                        @Html.DropDownListFor(model => model.usersid, null, "Please Select", new {@class = "form-control"})
                        @Html.ValidationMessageFor(model => model.usersid, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.Reported, "Reported To", new {@class = "control-label"})
                        @Html.DropDownListFor(model => model.Reported, null, "Please Select", new {@class = "form-control"})
                        @Html.ValidationMessageFor(model => model.Reported, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-1" for="isactive">Status</label>
                    <div class="col-md-1">
                        <div class="checkbox">
                            @Html.CheckBoxFor(model => model.IsActive, new {@class = "OnChangeCB"})
                            @Html.LabelFor(m => m.IsActive, "Active", new {@class = "lbl-active label label-success", style = "margin-left: 18px; padding-left: 4px;"})
                            @Html.LabelFor(m => m.IsActive, "In-Active", new {@class = "lbl-deactive label label-danger", style = "margin-left: 18px; padding-left: 4px;"})
                            @Html.ValidationMessageFor(model => model.IsActive, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    @Html.LabelFor(model => model.Reported, "IsManager", new {@class = "control-label col-md-1"})
                    <div class="col-md-1">
                        <div class="checkbox">
                            @Html.CheckBoxFor(model => model.IsManager, new {@class = "checkbox-select OnChangeCB"})
                            @Html.LabelFor(m => m.IsManager, "Active", new {@class = "lbl-manager label label-success", style = "margin-left: 18px; padding-left: 4px;"})
                            @Html.LabelFor(m => m.IsManager, "In-Active", new {@class = "lbl-nomanager label label-danger", style = "margin-left: 18px; padding-left: 4px;"})
                            @Html.ValidationMessageFor(model => model.IsManager, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <label class="control-label col-md-1" for="IsTeamLead">IsTeamLead</label>
                    <div class="col-md-1">
                        <div class="checkbox">
                            @Html.CheckBoxFor(model => model.IsTeamLead, new {@class = "checkbox-select OnChangeCB"})
                            @Html.LabelFor(m => m.IsTeamLead, "Active", new {@class = "lbl-teamlead label label-success", style = "margin-left: 18px; padding-left: 4px;"})
                            @Html.LabelFor(m => m.IsTeamLead, "In-Active", new {@class = "lbl-noteamlead label label-danger", style = "margin-left: 18px; padding-left: 4px;"})
                            @Html.ValidationMessageFor(model => model.IsTeamLead, "", new {@class = "text-danger"})
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-12 text-center">
                        <input type="submit" value="Save" class="btn btn-primary"/>
                    </div>
                </div>
            </div>
            @Html.HiddenFor(model => model.createdonutc)
            @Html.HiddenFor(model => model.updatedonutc)
            @Html.HiddenFor(model => model.ipused)
            @Html.HiddenFor(model => model.userid)
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/select2")
}

<script type="text/javascript">
    $(document).ready(function() {
        $("#usersid").select2();
        $("#teamid").select2();
        $("#Reported").select2();
        $('.checkbox-select').on('change',
            function() {
                $('.checkbox-select').not(this).prop('checked', false);
            });
        ChangeStatus();
        $(".OnChangeCB").change(function() { ChangeStatus(); });

        function ChangeStatus() {
            if ($("#IsActive").is(':checked')) {
                $(".lbl-active").show();
                $(".lbl-deactive").hide();
            } else {
                $(".lbl-active").hide();
                $(".lbl-deactive").show();
            }
            if ($("#IsManager").is(':checked')) {
                $(".lbl-manager").show();
                $(".lbl-nomanager").hide();
            } else {
                $(".lbl-manager").hide();
                $(".lbl-nomanager").show();
            }
            if ($("#IsTeamLead").is(':checked')) {
                $(".lbl-teamlead").show();
                $(".lbl-noteamlead").hide();
            } else {
                $(".lbl-teamlead").hide();
                $(".lbl-noteamlead").show();
            }
        }
    });
</script>