@model computan.timesheet.core.RuleException
@using (Html.BeginForm())
{
    <div class="form-horizontal">
        <h4>RuleException</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        <div class="form-group">
            <div class="col-md-12">
                @Html.DropDownList("ruleexceptiontypeid", null, "Please Select Rule Exception Type", new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.ruleexceptiontypeid, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-12">
                @Html.EditorFor(model => model.ruleexceptionvalue, new {htmlAttributes = new {@class = "form-control", placeholder = "Exception value"}})
                @Html.ValidationMessageFor(model => model.ruleexceptionvalue, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group hide andordiv-exception">
            <div class="col-md-12">
                <label class="radio-inline">
                    @Html.RadioButtonFor(model => model.isrequired, "true", new {@class = "isrequired-exception"})And<br>
                </label>
                <label class="radio-inline">
                    @Html.RadioButtonFor(model => model.isrequired, "false", new {@class = "isrequired-exception"})Or<br>
                </label>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="btnsaveexception" type="submit" value="Create" class="btn btn-default"/>
                <button id="cancelruleexception" class="btn btn-default">Cancal</button>
            </div>
        </div>
    </div>
    <input type="hidden" id="" class="ruleExceptionid" value="@Model.id"/>
}
<script>
    jQuery("#ruleexceptiontypeid").select2();
</script>